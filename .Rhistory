p <- dim(mydata)[2]/k
mydata1 <- mydata[,1:4]
mydata2 <- mydata[,5:8]
mydata3 <- mydata[,9:12]
ybar1 <- apply(mydata1,2,mean)
ybar2 <- apply(mydata2,2,mean)
ybar3 <- apply(mydata3,2,mean)
ybar <- (ybar1+ybar2+ybar3)/k
H <- n*((ybar1-ybar)%*%t(ybar1-ybar)+
(ybar2-ybar)%*%t(ybar2-ybar)+
(ybar3-ybar)%*%t(ybar3-ybar))
E1 <- matrix(0,p,p)
for(j in 1:n){
E1 <- E1+(mydata1[j,]-ybar1)%*%t(mydata1[j,]-ybar1)
}
E2 <- matrix(0,p,p)
for(j in 1:n){
E2 <- E2+(mydata2[j,]-ybar2)%*%t(mydata1[j,]-ybar2)
}
E3 <- matrix(0,p,p)
for(j in 1:n){
E3 <- E3+(mydata3[j,]-ybar3)%*%t(mydata3[j,]-ybar3)
}
E <- E1+E2+E3
H
E
eig <- eigen(solve(E)%*%H)
eig
v_h <- k-1
v_e <- k*(n-1)
df1 <- p*2
df2 <- 2*(v_e - p +1)
# Wilk's Lambda
# Lambda <- prod(1/(1+eig$values[1:s])) #prod(1/(1+eig$values)) different
# Lambda
Lambda <- det(E)/det(E+H)
Lambda
# find statistic wrt f-distribution
((1-sqrt(Lambda))/(sqrt(Lambda)))*((v_e-p+1)/p)
# critical value
qf(0.95,df1,df2)
# Roy's largest root
theta <- eig$values[1]/(1+eig$values[1])
d <- max(p,v_h)
F_ <- ((v_e-d-1)*eig$values[1])/d # upper bound
F_
H <- n*(k-1)((ybar1-ybar)%*%t(ybar1-ybar)+
(ybar2-ybar)%*%t(ybar2-ybar)+
(ybar3-ybar)%*%t(ybar3-ybar)+
(ybar4-ybar)%*%t(ybar4-ybar))
H <- n*(k-1)*((ybar1-ybar)%*%t(ybar1-ybar)+
(ybar2-ybar)%*%t(ybar2-ybar)+
(ybar3-ybar)%*%t(ybar3-ybar)+
(ybar4-ybar)%*%t(ybar4-ybar))
H <- n*(k-1)*((ybar1-ybar)%*%t(ybar1-ybar)+
(ybar2-ybar)%*%t(ybar2-ybar)+
(ybar3-ybar)%*%t(ybar3-ybar))
E1 <- matrix(0,p,p)
for(j in 1:n){
E1 <- E1+(mydata1[j,]-ybar1)%*%t(mydata1[j,]-ybar1)
}
E2 <- matrix(0,p,p)
for(j in 1:n){
E2 <- E2+(mydata2[j,]-ybar2)%*%t(mydata1[j,]-ybar2)
}
E3 <- matrix(0,p,p)
for(j in 1:n){
E3 <- E3+(mydata3[j,]-ybar3)%*%t(mydata3[j,]-ybar3)
}
E <- k*(E1+E2+E3)
H
E
eig <- eigen(solve(E)%*%H)
eig
v_h <- k-1
v_e <- k*(n-1)
df1 <- p*2
df2 <- 2*(v_e - p +1)
# Wilk's Lambda
# Lambda <- prod(1/(1+eig$values[1:s])) #prod(1/(1+eig$values)) different
# Lambda
Lambda <- det(E)/det(E+H)
Lambda
# find statistic wrt f-distribution
((1-sqrt(Lambda))/(sqrt(Lambda)))*((v_e-p+1)/p)
# critical value
qf(0.95,df1,df2)
# Roy's largest root
theta <- eig$values[1]/(1+eig$values[1])
d <- max(p,v_h)
F_ <- ((v_e-d-1)*eig$values[1])/d # upper bound
F_
qf(0.95,d,v_e-d-1)
H <- n*((ybar1-ybar)%*%t(ybar1-ybar)+
(ybar2-ybar)%*%t(ybar2-ybar)+
(ybar3-ybar)%*%t(ybar3-ybar))
H
E1 <- matrix(0,p,p)
for(j in 1:n){
E1 <- E1+(mydata1[j,]-ybar1)%*%t(mydata1[j,]-ybar1)
}
E2 <- matrix(0,p,p)
for(j in 1:n){
E2 <- E2+(mydata2[j,]-ybar2)%*%t(mydata1[j,]-ybar2)
}
E3 <- matrix(0,p,p)
for(j in 1:n){
E3 <- E3+(mydata3[j,]-ybar3)%*%t(mydata3[j,]-ybar3)
}
E <- (E1+E2+E3)
H
E
E1 <- matrix(0,p,p)
for(j in 1:n){
E1 <- E1+(mydata1[j,]-ybar1)%*%t(mydata1[j,]-ybar1)
}
E2 <- matrix(0,p,p)
for(j in 1:n){
E2 <- E2+(mydata2[j,]-ybar2)%*%t(mydata2[j,]-ybar2)
}
E3 <- matrix(0,p,p)
for(j in 1:n){
E3 <- E3+(mydata3[j,]-ybar3)%*%t(mydata3[j,]-ybar3)
}
E <- (E1+E2+E3)
H
E
# Wilk's Lambda
# Lambda <- prod(1/(1+eig$values[1:s])) #prod(1/(1+eig$values)) different
# Lambda
Lambda <- det(E)/det(E+H)
Lambda
E <- (E1+E2+E3)
H
E
eig <- eigen(solve(E)%*%H)
eig
v_h <- k-1
v_e <- k*(n-1)
df1 <- p*2
df2 <- 2*(v_e - p +1)
# Wilk's Lambda
# Lambda <- prod(1/(1+eig$values[1:s])) #prod(1/(1+eig$values)) different
# Lambda
Lambda <- det(E)/det(E+H)
Lambda
# find statistic wrt f-distribution
((1-sqrt(Lambda))/(sqrt(Lambda)))*((v_e-p+1)/p)
# critical value
qf(0.95,df1,df2)
# Roy's largest root
theta <- eig$values[1]/(1+eig$values[1])
d <- max(p,v_h)
F_ <- ((v_e-d-1)*eig$values[1])/d # upper bound
F_
qf(0.95,d,v_e-d-1)
# Wilk's Lambda
# Lambda <- prod(1/(1+eig$values[1:s])) #prod(1/(1+eig$values)) different
# Lambda
Lambda <- det(E)/det(E+H)
Lambda
# find statistic wrt f-distribution
((1-sqrt(Lambda))/(sqrt(Lambda)))*((v_e-p+1)/p)
# critical value
qf(0.95,df1,df2)
# Roy's largest root
theta <- eig$values[1]/(1+eig$values[1])
theta
d <- max(p,v_h)
F_ <- ((v_e-d-1)*eig$values[1])/d # upper bound
F_
tax <- 5.28
motz <- 10.99
kat <- 14.99
quill <- 19.99 + 4.99
5.28/63.95
air.base <- 12.99 + (motz/3)
air.tax <- air.base*(0.0825645)
air.tip <- air.base*(0.15)
air.total <- air.base + air.tax + air.tip
air.total
kat.base <- kat + motz/3
kat.base
tax.p <- 0.0825645
kat.tax <- kat.base*tax.p
tip <- 0.15
kat.tip <- kat.base*tip
kat.total <- kat.base + kat.tax + kat.tip
kat.total
quill.base <- quill + motz/3
quill.tax <- quill.base*tax.p
quill.tio <- quill.base*tip
quill.tip <- quill.base*tip
air.tip+kat.tip+quill.tip
air.tax+quill.tax+kat.tax
quill.total <- quill.base + quill.tax + quill.tip
quill.total
air.owed <- 2.50 + 6.69 + 2.99 + 5 + (3*2.99)
air.owed
qta <- 4.49 + 5.59 + (4.99*2)
qta
air.owed - qta
base <- 63.95
tip.total <- 78.82 - base - tax
tip.total
air.tip + kat.tip + quill.tip
mydata <- t(matrix(c(5.4, 6,6.3,6.7,5,5.3,5.3,6.5,4.8,5,6.5,7,5.2,6.2,6,5.8,4.8,4.9,4.2,5.6,5.4,5,6,6.4,6.1,5.9,6,7,3.9,4,4.4,5,4.9,5.1,5.9,6.5,4.8,
5,4.9,5,4,5.1,4.8,5.8,5.7,5.2,6.4,6.4,5, 5.7,5,6.5,5.6,5.4,5.1,6.2,4.2,4.6,5.3,6.3,5.7,6.1,6,6.6,6,5.5,5.7,6,6,5.3,5.8,6.4,
6,6,5.8,6,5.2,4.8,5.4,6,5.1,5.2,6.2,6.5,4,5, 4, 5, 5.3, 5.1, 5.8, 6.4, 4.8, 4.6, 5.7, 5.7,
5.7,5.4, 4.9, 5, 5.9, 6.1,5.7, 6, 5.3, 5.4, 6.8, 6.6,
5.6, 5.2, 5.4, 5.8, 6.1, 6, 6.1, 6.2, 4.6, 4.4, 5.7, 5.6, 5.8, 6.1, 5.2, 6.4, 6.2, 5.7, 5.9, 6, 4.5, 4, 5, 5.9, 5.3, 5.9, 5.8, 6, 5.1, 4.9, 5.3, 4.8, 4.4, 4.2, 5.6, 5.5),12,12))
mydata
mydata1 <- mydata[,1:4]
mydata1
mydata2 <- mydata[,5:8]
mydata2
mydata3 <- mydata[,9:12]
dim(mydata1)
dim(mydata1)[1]
n <- dim(mydata1)[1]
v <- n
v <- n - 1
cov(mydata1)
det(cov(mydata1))
det(cov(mydata1))^(v/2)
det(cov(mydata1))^(v/2)*det(cov(mydata2))^(v/2)*det(cov(mydata3))^(v/2)
s.1 <- cov(mydata1)
s.2 <- cov(mydata2)
s.3 <- cov(mydata3)
v*s.1
(v*s.1)%*%(v*s.2)
(v*s.1)%*%(v*s.2)%*%(v*s.3)
((v*s.1)+(v*s.2)+(v*s.3))
((v*s.1)+(v*s.2)+(v*s.3))/(v*3)
s.p <- ((v*s.1)+(v*s.2)+(v*s.3))/(v*3)
det(s.1)^(v/2)
det(s.1)^(v/2)*det(s.2)^(v/2)*det(s.3)^(v/2)
3*v/2
3*v
33/2
(det(s.1)^(v/2)*det(s.2)^(v/2)*det(s.3)^(v/2))/(det(s.p)^(3*v/2))
m <- (det(s.1)^(v/2)*det(s.2)^(v/2)*det(s.3)^(v/2))/(det(s.p)^(3*v/2))
m
p <- 4
k <- 3
((1/v) - (1/(3*v)))
((1/v) - (1/(3*v)))*3
c.1 <- (((1/v) - (1/(3*v)))*3)(((2*p^2)+3*p-1)/(6*(p+1)*(k-1)))
c.1 <- (((1/v) - (1/(3*v)))*3)*(((2*p^2)+3*p-1)/(6*(p+1)*(k-1)))
c.1
u <- -2*(1-c.1)*log(m)
u
(1/2)*2*4*5
qchisq(0.95, 20)
c.1 <- (((1/v)*3) - (1/(v*3)))*(((2*p^2)+3*p-1)/(6*(p+1)*(k-1)))
c.1
u <- -2*(1-c.1)*log(m)
u
qchisq(0.95, 20)
(((1/(v^2))*3) - (1/((v^2)*3)))
(((1/(v^2))*3) - (1/((v^2)*3)))*(((p-1)*(p+2))/(6*(k-1)))
c.2 <- (((1/(v^2))*3) - (1/((v^2)*3)))*(((p-1)*(p+2))/(6*(k-1)))
c.2
a.1 <- 20
c.2 - c.1
c.2 - (c.1^2)
(a.1+2)/(c.2 - (c.1^2))
a.2 <- (a.1+2)/(c.2 - (c.1^2))
a.2
(1 - c.1 - (a.1/a.2))
(1 - c.1 - (a.1/a.2))/a.1
b.1 <- (1 - c.1 - (a.1/a.2))/a.1
b.1
c.2
c.1^2
f <- -2*b.1*log(m)
f
a.2
qf(0.95, 20, 7657)
?matrix
data <- matrix(c(191, 195, 181, 183, 176, 208, 189, 197, 188, 192, 179, 183, 174,
190, 188, 163, 195, 186, 181, 175, 192, 174, 176, 197, 190,
155, 149, 148, 153, 144, 157, 150, 159, 152, 150, 158, 147, 150,
159, 151, 137, 155, 153, 145, 140, 154, 143, 139, 167, 163,
179, 201, 185, 188, 171, 192, 190, 189, 197, 187, 186, 174, 185,
195, 187, 161, 183, 173, 182, 165, 185, 178, 176, 200, 187,
145, 152, 149, 149, 142, 152, 149, 152, 159, 151, 148, 147, 152,
157, 158, 130, 158, 148, 146, 137, 152, 147, 143, 158, 150), 25, 4, byrow = FALSE)
data
S <- cov(data)
S11 <- cov(data[,1:2])
S22 <- cov(data[,3:4])
u <- det(S)/(det(S11)*det(S22))
n <- dim(data)[1]
p <- dim(data)[2]
pvec <- c(2,8)
a2 <- p^2-sum(pvec^2)
a3 <- p^3-sum(pvec^3)
f <- a2/2
v <- n-1
c <- 1-(2*a3+3*a2)/(12*f*v)
uprime <- -v*c*log(u)
uprime
qchisq(0.95,f)
f
pvec <- c(3,4)
a2 <- p^2-sum(pvec^2)
a3 <- p^3-sum(pvec^3)
f <- a2/2
v <- n-1
c <- 1-(2*a3+3*a2)/(12*f*v)
uprime <- -v*c*log(u)
uprime
qchisq(0.95,f)
f
qchisq(0.95,-4)
n
p
pvec <- c(2,2)
a2 <- p^2-sum(pvec^2)
a3 <- p^3-sum(pvec^3)
f <- a2/2
v <- n-1
c <- 1-(2*a3+3*a2)/(12*f*v)
uprime <- -v*c*log(u)
uprime
qchisq(0.95,f)
f
dataa <- matrix(c(35, 35, 40, 10, 6, 20, 35, 35, 35, 30,
3.5, 4.9, 30, 2.8, 2.7, 2.8, 4.6, 10.9, 8, 1.6,
2.8, 2.7, 4.38, 3.21, 2.73, 2.81, 2.88, 2.9, 3.28, 3.2), 10, 3, byrow = FALSE)
dataa
S <- cov(dataa)
s
S
S11 <- cov(dataa[,1])
S11
dataa[,1]
dataa
dataa[1]
dataa[:,1]
dataa[,1]
t(dataa[,1])
S11 <- cov(dataa[,1])
S22 <- cov(dataa[,2])
S22
S <- cov(dataa)
S11 <- var(dataa[,1])
S22 <- var(dataa[,2])
S33 <- var(dataa[,3])
u <- det(S)/(S11*S22*S33)
n <- dim(mydata2)[1]
p <- dim(mydata2)[2]
pvec <- c(1, 1, 1)
a2 <- p^2-sum(pvec^2)
a3 <- p^3-sum(pvec^3)
f <- a2/2
v <- n-1
c <- 1-(2*a3+3*a2)/(12*f*v)
uprime <- -v*c*log(u)
uprime
qchisq(0.95,f)
f
qchisq(0.95, 7)
qchisq(0.95, 6.5)
S11
?var
dataa <- matrix(c(35, 35, 40, 10, 6, 20, 35, 35, 35, 30,
3.5, 4.9, 30, 2.8, 2.7, 2.8, 4.6, 10.9, 8, 1.6,
2.8, 2.7, 4.38, 3.21, 2.73, 2.81, 2.88, 2.9, 3.28, 3.2), 10, 3, byrow = FALSE)
dataa
S <- cov(dataa)
S
S11 <- var(dataa[,1])
S22 <- var(dataa[,2])
S33 <- var(dataa[,3])
u <- det(S)/(S11*S22*S33)
n <- dim(mydata2)[1]
n
n <- dim(dataa)[1]
n
p <- dim(dataa)[2]
pvec <- c(1, 1, 1)
a2 <- p^2-sum(pvec^2)
a3 <- p^3-sum(pvec^3)
f <- a2/2
v <- n-1
c <- 1-(2*a3+3*a2)/(12*f*v)
uprime <- -v*c*log(u)
uprime
qchisq(0.95,f)
f
getwd()
setwd('/Users/ankitasingh/Documents/STA-160-Final/')
library(ggplot2)
df_aqua= read.csv("Aqua-Data.csv")
#R AND G COMPARISON
ggplot(df_aqua, aes(x=R, y=G, color = B )) +
geom_point() + scale_x_continuous(breaks=seq(0,255,25)) +
scale_y_continuous(breaks=seq(0,255,25))
#R AND B COMPARISON
ggplot(df_aqua, aes(x=R, y=B, color = G )) +
geom_point() + scale_x_continuous(breaks=seq(0,255,25)) +
scale_y_continuous(breaks=seq(0,255,25))
#G AND B COMPARISON
ggplot(df_aqua, aes(x=G, y=B, color = R)) +
geom_point() + scale_x_continuous(breaks=seq(0,255,25)) +
scale_y_continuous(breaks=seq(0,255,25))
# setup
knitr::opts_chunk$set(echo = FALSE, results = "hide")
setwd('/Users/ankitasingh/Documents/STA-160-Final/')
library(ggplot2)
df_aqua= read.csv("Aqua-Data.csv")
ggplot(df_aqua, aes(x=R, y=G, color = B )) +
geom_point() + scale_x_continuous(breaks=seq(0,255,25)) +
scale_y_continuous(breaks=seq(0,255,25))
install.packages("RColorBrewer")
# setup
knitr::opts_chunk$set(echo = FALSE, results = "hide")
setwd('/Users/ankitasingh/Documents/STA-160-Final/')
library(ggplot2)
library(RColorBrewer)
ggplot(df_aqua, aes(x=R, y=G, color = B )) +
geom_point() + scale_x_continuous(breaks=seq(0,255,25)) +
scale_y_continuous(breaks=seq(0,255,25)) +
scale_color_gradient(low = "E2FFFE", high = "00FFF3")
ggplot(df_aqua, aes(x=R, y=G, color = B )) +
geom_point() + scale_x_continuous(breaks=seq(0,255,25)) +
scale_y_continuous(breaks=seq(0,255,25)) +
scale_color_gradient(low = "#E2FFFE", high = "#00FFF3")
ggplot(df_aqua, aes(x=R, y=G, color = B )) +
geom_point() + scale_x_continuous(breaks=seq(0,255,25)) +
scale_y_continuous(breaks=seq(0,255,25)) +
scale_color_gradient(low = "#E2FFFE", high = "#04B9B3")
ggplot(df_aqua, aes(x=R, y=G, color = B )) +
geom_point() + scale_x_continuous(breaks=seq(0,255,25)) +
scale_y_continuous(breaks=seq(0,255,25)) +
scale_color_gradient(low = "#E2FFFE", high = "#229A96")
ggplot(df_aqua, aes(x=R, y=G, color = B )) +
geom_point() + scale_x_continuous(breaks=seq(0,255,25)) +
scale_y_continuous(breaks=seq(0,255,25)) +
scale_color_gradient(low = "#3DFAF4", high = "#229A96")
ggplot(df_aqua, aes(x=R, y=G, color = B )) +
geom_point() + scale_x_continuous(breaks=seq(0,255,25)) +
scale_y_continuous(breaks=seq(0,255,25)) +
scale_color_gradient(low = "#3DFAF4", high = "#318381")
ggplot(df_aqua, aes(x=R, y=G, color = B )) +
geom_point() + scale_x_continuous(breaks=seq(0,255,25)) +
scale_y_continuous(breaks=seq(0,255,25)) +
scale_color_gradient(low = "#3DFAF4", high = "#318381")
ggplot(df_aqua, aes(x=R, y=B, color = G )) +
geom_point() + scale_x_continuous(breaks=seq(0,255,25)) +
scale_y_continuous(breaks=seq(0,255,25))  +
scale_color_gradient(low = "#3DFAF4", high = "#318381")
ggplot(df_aqua, aes(x=R, y=B, color = G )) +
geom_point() + scale_x_continuous(breaks=seq(0,255,25)) +
scale_y_continuous(breaks=seq(0,255,25))  +
scale_color_gradient(low = "#3DFAF4", high = "#318381")
ggplot(df_aqua, aes(x=R, y=B, color = G )) +
geom_point() + scale_x_continuous(breaks=seq(0,255,25)) +
scale_y_continuous(breaks=seq(0,255,25))  +
scale_color_gradient(low = "#3DFAF4", high = "#318381")
ggplot(df_aqua, aes(x=G, y=B, color = R)) +
geom_point() + scale_x_continuous(breaks=seq(0,255,25)) +
scale_y_continuous(breaks=seq(0,255,25)) +
scale_color_gradient(low = "#3DFAF4", high = "#318381")
ggplot(df_aqua, aes(x=G, y=B, color = R)) +
geom_point() + scale_x_continuous(breaks=seq(0,255,25)) +
scale_y_continuous(breaks=seq(0,255,25)) +
scale_color_gradient(low = "#3DFAF4", high = "#318381")
ggplot(df_aqua, aes(x=G, y=B, color = R)) +
geom_point() + scale_x_continuous(breaks=seq(0,255,25)) +
scale_y_continuous(breaks=seq(0,255,25)) +
scale_color_gradient(low = "#3DFAF4", high = "#318381")
ggplot(df_aqua, aes(x=R, y=G, color = B )) +
geom_point() + scale_x_continuous(breaks=seq(0,255,25)) +
geom_abline(slope = .5,intercept = 150, linetype = 2)+
scale_y_continuous(breaks=seq(0,255,25)) +
scale_color_gradient(low = "#3DFAF4", high = "#318381")
ggplot(df_aqua, aes(x=R, y=G, color = B )) +
geom_point() + scale_x_continuous(breaks=seq(0,255,25)) +
geom_abline(slope = .5,intercept = 150, linetype = 2)+
scale_y_continuous(breaks=seq(0,255,25)) +
scale_color_gradient(low = "#3DFAF4", high = "#318381")
ggplot(df_aqua, aes(x=R, y=G, color = B )) +
geom_point() + scale_x_continuous(breaks=seq(0,255,25)) +
geom_abline(slope = .5,intercept = 150, linetype = 2)+
scale_y_continuous(breaks=seq(0,255,25)) +
scale_color_gradient(low = "#3DFAF4", high = "#318381")
ggplot(df_aqua, aes(x=R, y=G, color = B )) +
geom_point() + scale_x_continuous(breaks=seq(0,255,25)) +
geom_abline(slope = .5,intercept = 150, linetype = 2)+
scale_y_continuous(breaks=seq(0,255,25)) +
scale_color_gradient(low = "#3DFAF4", high = "#318381")
ggplot(df_aqua, aes(x=R, y=G, color = B )) +
geom_point() + scale_x_continuous(breaks=seq(0,255,25)) +
geom_abline(slope = .5,intercept = 130, linetype = 2)+
scale_y_continuous(breaks=seq(0,255,25)) +
scale_color_gradient(low = "#3DFAF4", high = "#318381")
ggplot(df_aqua, aes(x=R, y=G, color = B )) +
geom_point() + scale_x_continuous(breaks=seq(0,255,25)) +
geom_abline(slope = .5,intercept = 100, linetype = 2)+
scale_y_continuous(breaks=seq(0,255,25)) +
scale_color_gradient(low = "#3DFAF4", high = "#318381")
ggplot(df_aqua, aes(x=R, y=G, color = B )) +
geom_point() + scale_x_continuous(breaks=seq(0,255,25)) +
geom_abline(slope = .5,intercept = 100, linetype = 2)+
ggplot(df_aqua, aes(x=R, y=G, color = B )) +
geom_point() + scale_x_continuous(breaks=seq(0,255,25)) +
geom_abline(slope = .5,intercept = 100, linetype = 2)+
scale_y_continuous(breaks=seq(0,255,25)) +
scale_color_gradient(low = "#3DFAF4", high = "#318381")
